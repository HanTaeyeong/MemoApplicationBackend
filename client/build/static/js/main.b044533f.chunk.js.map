{"version":3,"sources":["lib/styles/palette.ts","components/common/Button.tsx","store/loading.ts","lib/createRequest.ts","store/auth.ts","lib/api/client.ts","lib/api/auth.ts","lib/localStorageRequest.ts","components/post/PostListHeader.tsx","lib/api/post.ts","store/write.ts","components/post/PostItem.tsx","components/post/PostTemplate.tsx","pages/PostListPage.tsx","components/auth/AuthTemplate.tsx","components/auth/AuthForm.tsx","lib/validation.ts","containers/auth/LoginForm.tsx","pages/LoginPage.tsx","containers/auth/RegisterForm.tsx","pages/RegisterPage.tsx","components/write/Editor.tsx","pages/WritePage.tsx","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx"],"names":["palette","gray","cyan","StyledButton","styled","button","props","fullWidth","css","Button","children","onClickFunction","loadingState","useSelector","loading","onClick","className","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","createReducer","state","action","payload","createRequestThunk","type","request","SUCCESS","FAILURE","params","dispatch","a","response","data","error","alert","AuthTypeEnum","createRequestActionTypes","client","axios","create","prefix","login","username","password","post","logout","register","check","get","CHANGE_AUTH_TYPE","CHANGE_FIELD","INITIALIZE_FORM","TEMP_SET_USER","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILURE","CHECK","CHECK_SUCCESS","CHECK_FAILURE","changeField","authType","passwordConfirm","initializeForm","registerAsync","authAPI","loginAsync","logoutAsync","checkAsync","initialState","authorized","authError","checkError","auth","setItem","itemName","value","localStorage","e","console","log","removeItem","HeaderBlock","div","Header","authState","useDispatch","history","useHistory","useEffect","push","from","getPostList","page","limit","INITIALIZE","CHANGE_WRITING_FIELD","FINALIZE_WRITING","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","initialize","finalizeWriting","changeWritingField","_id","title","contents","tags","writePostAsync","updatePostAsync","patch","write","postError","finishWriting","PostItemBlock","ItemHead","ItemSubInfo","span","ItemContent","PostItem","lastUpdated","slice","PostTemplateBlock","LoadingSpinner","SButton","NewMemoButton","NavigationBlock","SelectItems","PageItems","PostTemplate","useState","posts","setPosts","lastPage","totalPostCount","pageState","setPageState","isLoadingList","setIsLoadingList","postApi","res","newPosts","headers","d","_doc","onChangePage","preventDefault","nextPage","currentTarget","name","getList","PostListHeader","onChange","nextLimit","target","nextLastPage","disabled","length","map","updatedAt","PostListPage","AuthTemplateBlock","WhiteBox","AuthTemplate","to","AuthFormBlock","StyledInput","input","Footer","ButtonWithMarginTop","textMap","AuthForm","onSubmit","text","autoComplete","placeholder","ajv","Ajv","allErrors","userSchema","validate","schema","compile","isValid","errors","LoginForm","localUsername","getItem","JSON","stringify","LoginPage","RegisterForm","RegisterPage","EditorBlock","TitleInput","ButtonWrapper","quillOption","theme","modules","toolbar","size","clipboard","matchVisual","formats","Editor","writeState","editorState","setEditorState","onChangeTitle","onChangeSelect","WritePage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","whiteList","rootReducer","combineReducers","persistReducer","store","createStore","applyMiddleware","thunk","navigator","language","persister","persistStore","getState","loadUser","createBrowserHistory","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.b044533f.chunk.js","sourcesContent":["const palette = {\r\n    gray: [\r\n      '#f8f9fa',\r\n      '#f1f3f5',\r\n      '#e9ecef',\r\n      '#dee2e6',\r\n      '#ced4da',\r\n      '#adb5bd',\r\n      '#868e96',\r\n      '#495057',\r\n      '#343a40',\r\n      '#212529',\r\n    ],\r\n    cyan: [\r\n      '#e3fafc',\r\n      '#c5f6fa',\r\n      '#99e9f2',\r\n      '#66d9e8',\r\n      '#3bc9db',\r\n      '#22b8cf',\r\n      '#15aabf',\r\n      '#1098ad',\r\n      '#0c8599',\r\n      '#0b7285',\r\n    ],\r\n  };\r\n  \r\n  export default palette;","import React from 'react'\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nimport {RootStateType} from '../../store';\r\nimport { useSelector } from 'react-redux';\r\n\r\ninterface ButtonPropsType {\r\n    cyan: Boolean;\r\n    fullWidth: Boolean;\r\n}\r\n\r\nconst StyledButton = styled.button`\r\n    position:relative;\r\n\r\n    border:none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    background: ${palette.gray[8]};\r\n    &:hover{\r\n        background: ${palette.gray[6]};\r\n    }\r\n\r\n    ${(props: ButtonPropsType) => props.fullWidth &&\r\n        css`\r\n    padding-top:0.75rem;\r\n    padding-bottom:0.75rem;\r\n    width:100%;\r\n    font-size:1.125rem;\r\n    `}\r\n    \r\n    ${(props: ButtonPropsType) => props.cyan && css`\r\n        background:${palette.cyan[5]};\r\n        &:hover{\r\n            background:${palette.cyan[4]}\r\n        }\r\n    `}\r\n    \r\n        &.loading{\r\n            background:${palette.cyan[1]};\r\n            cursor:not-allowed;\r\n            .text{\r\n            visibility:hidden;\r\n        }\r\n\r\n        &::after{\r\n            content:\"\";\r\n            position:absolute;\r\n            width:1.5rem;\r\n            height:1.5rem;\r\n            border:0.25rem solid transparent;\r\n            border-top-color:${palette.cyan[5]};\r\n            border-radius:50%;\r\n            /* top:50%;\r\n            left:50%;\r\n            transform:translate(-50%,-50%);\r\n             */\r\n             top:0;\r\n             left:0;\r\n             bottom:0;\r\n             right:0;\r\n             margin:auto;\r\n            animation:button-loading-spinner 1s ease infinite;\r\n        }\r\n        }\r\n        \r\n        @keyframes button-loading-spinner{\r\n            from{\r\n                transform:rotate(0turn);\r\n            }\r\n            to{\r\n                transform:rotate(1turn);\r\n            }\r\n        }\r\n`;\r\n\r\ninterface ButtonType {\r\n    children: String;\r\n    cyan: Boolean;\r\n    fullWidth: Boolean;\r\n\r\n    onClickFunction?: Function | undefined;\r\n}\r\n\r\nconst Button = ({ children, cyan, fullWidth, onClickFunction }: ButtonType) => {\r\n\r\n    const loadingState = useSelector(({ loading }:RootStateType) => ({ ...loading }));\r\n\r\n    const onClick = () => {\r\n        if (onClickFunction) {\r\n            return onClickFunction();\r\n        } else {\r\n            return () => { }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledButton cyan={cyan} fullWidth={fullWidth}\r\n            onClick={onClick} className={(loadingState['auth/LOGIN'] || loadingState['auth/REGISTER']) ? 'loading' : ''}>\r\n            <span className={'text'}>{children}</span>\r\n        </StyledButton>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import { createAction, createReducer } from 'typesafe-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(START_LOADING, requestType => requestType)();\r\nexport const finishLoading = createAction(FINISH_LOADING, requestType => requestType)();\r\n\r\nconst initialState = {\r\n    'auth/LOGIN': false,\r\n    'auth/REGISTER': false,\r\n    'auth/LOGOUT': false,\r\n    'auth/CHECK': false,\r\n\r\n    'write/WRITE_POST': false,\r\n    'write/GET_POST_LIST': false,\r\n    'write/UPDATE_POST': false,\r\n    'write/DELETE_POST': false\r\n};\r\n\r\nconst loading = createReducer(initialState,\r\n    {\r\n        [START_LOADING]: (state, action) => ({ ...state, [action.payload]: true }),\r\n        [FINISH_LOADING]: (state, action) => ({ ...state, [action.payload]: false }),\r\n    }\r\n)\r\n\r\nexport default loading;","import { startLoading, finishLoading } from '../store/loading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport function createRequestThunk(type: string, request: Function) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n\r\n    return (params: any) => async (dispatch: Dispatch<any>) => {\r\n        dispatch({ type });\r\n        dispatch(startLoading(type));\r\n\r\n        try {\r\n            const response = await request(params);\r\n            dispatch({\r\n                type: SUCCESS,\r\n                payload: response.data\r\n            });\r\n        } catch (e) {\r\n            dispatch({\r\n                type: FAILURE,\r\n                payload: e,\r\n                error: true\r\n            });\r\n            alert(e);\r\n        } finally {\r\n            dispatch(finishLoading(type));\r\n        }\r\n    }\r\n}\r\n\r\nexport const createRequestActionTypes = (type: string) => {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return [type, SUCCESS, FAILURE];\r\n}","import { createAction, ActionType, createReducer, Action } from 'typesafe-actions';\r\nimport { createRequestThunk, createRequestActionTypes } from '../lib/createRequest';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport { create } from 'domain';\r\n\r\nconst CHANGE_AUTH_TYPE = 'auth/CHANGE_AUTH_TYPE';\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nexport const TEMP_SET_USER = 'auth/TEMP_SET_USER';\r\n\r\nexport const [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes('auth/REGISTER');\r\nexport const [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\r\nexport const [LOGOUT, LOGOUT_SUCCESS, LOGOUT_FAILURE] = createRequestActionTypes('auth/LOGOUT');\r\nexport const [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('auth/CHECK');\r\n\r\nexport const changeAuthType = createAction(CHANGE_AUTH_TYPE, ({ authType }) => ({ authType }))();\r\n\r\nexport const changeField = createAction(CHANGE_FIELD, ({ authType, username, password, passwordConfirm }) => ({\r\n    authType, username, password, passwordConfirm\r\n}))();\r\nexport const initializeForm = createAction(INITIALIZE_FORM, authType => authType)();\r\nexport const tempSetUser = createAction(TEMP_SET_USER, username => username)();\r\n\r\nexport const register = createAction(REGISTER, ({ username, password }) => ({\r\n    username, password\r\n}))\r\nexport const registerAsync = createRequestThunk(REGISTER, authAPI.register);\r\n\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n    username, password\r\n}))\r\nexport const loginAsync = createRequestThunk(LOGIN, authAPI.login);\r\n\r\nexport const logout = createAction(LOGOUT, ({ username }) => ({ username }));\r\nexport const logoutAsync = createRequestThunk(LOGOUT, authAPI.logout);\r\n\r\n\r\nexport const check = createAction(CHECK, ({ username }) => ({ username }));\r\nexport const checkAsync = createRequestThunk(CHECK, authAPI.check);\r\n\r\n\r\ninterface AuthMapType {\r\n    [key: string]: Object;\r\n}\r\n\r\nenum AuthTypeEnum {\r\n    'login' = 'login',\r\n    'register' = 'register'\r\n}\r\n\r\ninterface AuthStateType {\r\n    authType: AuthTypeEnum;\r\n    username: string;\r\n    password: string;\r\n    passwordConfirm: string | null | undefined;\r\n    authorized: boolean | null,\r\n    authError: any;\r\n    checkError: any;\r\n}\r\n\r\nconst initialState: AuthStateType = {\r\n    authType: AuthTypeEnum['register'],\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    authorized: false,\r\n    authError: null,\r\n    checkError: null,\r\n}\r\n\r\nconst auth = createReducer(initialState,\r\n    {\r\n        [TEMP_SET_USER]: (state, { payload: username }) => ({ ...state, username }),\r\n        [CHANGE_AUTH_TYPE]: (state, { payload: { authType } }) => ({ ...state, authType }),\r\n        [CHANGE_FIELD]: (state, { payload: { authType, username, password, passwordConfirm } }) => ({ ...state, authType, username, password, passwordConfirm }),\r\n        [INITIALIZE_FORM]: (state, { payload: { authType } }) => ({ ...initialState }),\r\n\r\n        [REGISTER_SUCCESS]: (state: AuthStateType, { payload: { auth } }: any) => ({ ...state, authorized:true,authError: null }),\r\n        [REGISTER_FAILURE]: (state: AuthStateType, { payload: { error } }: any) => ({ ...state,authorized:false, authError: error }),\r\n\r\n        [LOGIN_SUCCESS]: (state: AuthStateType, { payload: { username,password } }: any) => ({ ...state, authorized: true, authError: null }),\r\n        [LOGIN_FAILURE]: (state: AuthStateType, { payload: { error } }: any) => ({ ...state, authorized: false, authError: error }),\r\n\r\n        [CHECK_SUCCESS]: (state: AuthStateType, { payload: username }: any) => ({ ...state, authorized: true, checkError: false }),\r\n        [CHECK_FAILURE]: (state: AuthStateType, { payload: error }: any) => ({ ...state, authorized: false, checkError: error }),\r\n\r\n        [LOGOUT_SUCCESS]: (state: AuthStateType, { payload: username }: any) => ({ ...initialState }),\r\n        [LOGOUT_FAILURE]: (state: AuthStateType, { payload: username }: any) => ({ ...initialState })\r\n    }\r\n)\r\n\r\nexport default auth;","import axios from 'axios';\r\n\r\n//axios.defaults.baseURL = 'https://ec2-52-79-233-83.ap-northeast-2.compute.amazonaws.com:4311/simplememo.com'\r\n\r\n// axios.defaults.baseURL = 'http://localhost:4311';\r\n\r\n\r\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\n// axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import client from './client';\r\n\r\nconst prefix='/api/auth';\r\n\r\nexport const login = async ({ username, password }: { username: string, password: string }) =>\r\n    await client.post(prefix+'/login', { username, password });\r\n\r\nexport const logout = async () => {\r\n    return await client.post(prefix+'/logout')\r\n};\r\n\r\nexport const register = async ({ username, password }: { username: string, password: string }) =>\r\n    await client.post(prefix+'/register', { username, password })\r\n\r\nexport const check = async () => await client.get(prefix+'/check');\r\n\r\n\r\n","export const getItem = (itemName: string) => {\r\n    try {\r\n        const result = localStorage.getItem(itemName);\r\n        return result ? result :'';\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const setItem = (itemName: string, value: string) => {\r\n    try {\r\n        return localStorage.setItem(itemName, value);\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const removeItem = (itemName: string) => {\r\n    try {\r\n        return localStorage.removeItem(itemName);\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport Button from '../common/Button';\r\nimport { initializeForm, logoutAsync } from '../../store/auth';\r\nimport { removeItem } from '../../lib/localStorageRequest';\r\n\r\nconst HeaderBlock = styled.div`\r\n    width:100%;\r\n    height:4rem;\r\n    \r\n    display:flex;\r\n    align-items:center;\r\n    \r\n    background:white;\r\n    box-shadow:0px 2px 4px rgba(0,0,0,0.08);\r\n    margin-bottom:1rem;\r\n\r\n    justify-content:space-between;\r\n\r\n    .logo{\r\n        font-size:1.125rem;\r\n        font-weight:800;\r\n        letter-spacing:2px;\r\n    }\r\n    .right{\r\n      \r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    const authState = useSelector(({ auth, loading }: RootStateType) =>\r\n        ({ username: auth.username, authorized: auth.authorized, loading: { ...loading } }))\r\n    const { authorized, username } = authState;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onLogout = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        dispatch(initializeForm);\r\n        removeItem('username');\r\n        dispatch(logoutAsync(''));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!authorized && !username) {\r\n            history.push('/login', { from: 'PostListPage' })\r\n        }\r\n    }, [authorized, username])\r\n\r\n    return (\r\n        <HeaderBlock>\r\n                <span className='logo'>Simple Memo</span>\r\n                <Button cyan={false} fullWidth={false} onClickFunction={ onLogout}>Logout</Button>\r\n        </HeaderBlock>\r\n    )\r\n}\r\n\r\nexport default Header","import client from './client';\r\n\r\nconst prefix = '/api/post';\r\n\r\nexport const getPostList = ({ page, limit }: { page: number, limit: number }) => client.get(`${prefix}/get?page=${page}&limit=${limit}`)\r\n\r\nexport const writePost = ({ title, contents, tags }: { title: string, contents: string, tags: string[] | undefined }) =>\r\n    client.post(prefix + '/write', { title, contents, tags });\r\n\r\nexport const readPost = (id: string) =>\r\n    client.get(`${prefix}/read/${id}`);\r\n\r\nexport const deletePost = (id: string) =>\r\n    client.delete(`${prefix}/delete/${id}`);\r\n\r\nexport const updatePost = ({ _id, title, contents, tags }: { _id: string, title: string, contents: string, tags: string[] | undefined }) =>\r\n    client.patch(`${prefix}/update/${_id}`, { title, contents, tags })\r\n","import { createAction, createReducer } from 'typesafe-actions';\r\nimport { createRequestThunk, createRequestActionTypes } from '../lib/createRequest';\r\nimport * as postApi from '../lib/api/post';\r\n\r\nconst INITIALIZE = 'write/INITIALIZE';\r\nconst CHANGE_WRITING_FIELD = 'write/CHANGE_WRITING_FIELD';\r\nconst FINALIZE_WRITING = 'write/FINALIZE_WRITING';\r\n\r\nconst [WRITE_POST, WRITE_POST_SUCCESS, WRITE_POST_FAILURE] = createRequestActionTypes('write/WRITE_POST');\r\nconst [UPDATE_POST, UPDATE_POST_SUCCESS, UPDATE_POST_FAILURE] = createRequestActionTypes('write/UPDATE_POST');\r\n\r\nexport const initialize = createAction(INITIALIZE, action => action)();\r\nexport const finalizeWriting = createAction(FINALIZE_WRITING, action => action)();\r\n\r\nexport const changeWritingField = createAction(CHANGE_WRITING_FIELD, ({ _id, title, contents, tags }) =>\r\n    ({ _id, title, contents, tags }))();\r\n\r\nexport const writePost = createAction(WRITE_POST, ({ title, contents, tags }) => ({ title, contents, tags }))\r\nexport const writePostAsync = createRequestThunk(WRITE_POST, postApi.writePost);\r\n\r\nexport const updatePost = createAction(UPDATE_POST, ({ _id, title, contents }) => ({ _id, title, contents }));\r\nexport const updatePostAsync= createRequestThunk(UPDATE_POST, postApi.updatePost);\r\n\r\nexport interface WriteType {\r\n    _id: string,\r\n    title: string,\r\n    contents: string,\r\n    tags: string[] | undefined,\r\n    username: string,\r\n\r\n    postError: boolean; \r\n    finishWriting: boolean,\r\n}\r\nconst initialState: WriteType = {\r\n    _id: '',\r\n    title: '',\r\n    contents: '',\r\n    tags: [],\r\n    username: '',\r\n\r\n    postError:false,\r\n    finishWriting: false,\r\n}\r\n\r\nconst write = createReducer(initialState, {\r\n    [INITIALIZE]: (state, { payload: action }) => ({ ...state, finishWriting: false }),\r\n    [FINALIZE_WRITING]: (state, { payload: action }) => ({ ...state, finishWriting: true }),\r\n\r\n    [CHANGE_WRITING_FIELD]: (state, { payload: { _id, title, contents, tags } }) => ({ ...state, _id, title, contents, tags }),\r\n\r\n    [WRITE_POST_SUCCESS]: (state: WriteType) => ({ ...state, postError: false }),\r\n    [WRITE_POST_FAILURE]: (state: WriteType) => ({ ...state, postError: true }),\r\n\r\n    [UPDATE_POST_SUCCESS]: (state: WriteType) => ({ ...state, postError: false }),\r\n    [UPDATE_POST_FAILURE]: (state: WriteType) => ({ ...state, postError: true }),\r\n})\r\n\r\nexport default write;\r\n\r\n\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { changeWritingField } from '../../store/write';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst PostItemBlock = styled.div`\r\nmargin-top:0.5rem;\r\nborder-bottom:1px solid ${palette.gray[2]};\r\ncursor:pointer;\r\n`;\r\n\r\nconst ItemHead = styled.div`\r\ndisplay:flex;\r\nflex-direction:row;\r\njustify-content:space-between;\r\n    \r\n    .title{    \r\n        font-size:1.125rem;\r\n        font-weight:700;\r\n        margin-bottom:0.5rem;\r\n    }\r\n`\r\n\r\nconst ItemSubInfo = styled.span`\r\n    color:${palette.gray[6]};\r\n   \r\n    height:1.5rem;\r\n    span+span:before{\r\n        color:${palette.gray[5]};\r\n        padding-left:0.25rem;\r\n        padding-right:0.25rem;\r\n        content:'\\\\B7';\r\n    }\r\n`\r\nconst ItemContent = styled.div`\r\n    font-size:0.77rem;\r\n    color:${palette.gray[8]};\r\n    margin-bottom:2rem;\r\n    `\r\n\r\nconst PostItem = ({ _id, title, contents, lastUpdated }: { _id: string, title: string, contents: string, lastUpdated: string }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const writeState = useSelector(({ write, loading }: RootStateType) => ({\r\n        ...write, loading: { ...loading },\r\n    }))\r\n\r\n    const onClick = () => {\r\n        dispatch(changeWritingField({ _id, title, contents }));\r\n\r\n        history.push('/write', { from: '/PostListPage' });\r\n    }\r\n\r\n    return (\r\n        <PostItemBlock onClick={onClick}>\r\n            <ItemHead>\r\n                <span className=\"title\">{title}</span>\r\n                <ItemSubInfo>\r\n                    <span><b>Last update</b></span>\r\n                    <span>{lastUpdated.slice(0, 10)}</span>\r\n                </ItemSubInfo>\r\n\r\n            </ItemHead>\r\n            <ItemContent>\r\n                {contents}\r\n            </ItemContent>\r\n        </PostItemBlock>\r\n    )\r\n}\r\n\r\nexport default PostItem","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport PostListHeader from './PostListHeader';\r\nimport PostItem from './PostItem';\r\nimport Button from '../common/Button';\r\n\r\nimport palette from '../../lib/styles/palette';\r\n\r\nimport { initialize, changeWritingField } from '../../store/write';\r\n\r\nimport * as postApi from '../../lib/api/post';\r\n\r\nconst PostTemplateBlock = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n`;\r\n// { children: String,cyan:Boolean,fullWidth:Boolean }\r\n\r\nconst LoadingSpinner=styled.div`\r\n    position:fixed;\r\n    margin:auto;\r\n    visibility:hidden;\r\n    top:0;\r\n    left:0;\r\n    bottom:0;\r\n    right:0;\r\n    margin:auto;\r\n    width:0;\r\n    height:0;\r\n    background:black;\r\n\r\n    &.loading{\r\n        visibility:visible;\r\n    }\r\n    &::after{\r\n            content:\"\";\r\n            position:absolute;\r\n            width:5rem;\r\n            height:5rem;\r\n            border:0.5rem solid transparent;\r\n            border-top-color:${palette.cyan[5]};\r\n            border-radius:50%;\r\n            /* top:50%;\r\n            left:50%;\r\n            transform:translate(-50%,-50%);\r\n             */\r\n             top:0;\r\n             left:0;\r\n             bottom:0;\r\n             right:0;\r\n             margin:auto;\r\n            animation:button-loading-spinner 1s ease infinite;\r\n        }\r\n        \r\n        @keyframes button-loading-spinner{\r\n            from{\r\n                transform:rotate(0turn);\r\n            }\r\n            to{\r\n                transform:rotate(1turn);\r\n            }\r\n        }\r\n`;\r\n\r\nconst SButton = styled.button`\r\n    border:none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    background: ${palette.gray[8]};\r\n    &:hover{\r\n        background: ${palette.gray[6]};\r\n    }\r\n\r\n    &:disabled, \r\n    &.loading\r\n    {\r\n        background:${palette.gray[3]};\r\n        color:${palette.gray[4]};\r\n        cursor:not-allowed;\r\n    }\r\n`;\r\n\r\nconst NewMemoButton = styled.button`\r\n    position:fixed;\r\n    width:3rem;\r\n    height:3rem;\r\n    font-size:3rem;\r\n    right:3rem;\r\n    bottom:3rem;\r\n    border-radius:100%;\r\n    \r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n\r\n    background:${palette.cyan[5]};\r\n    color:white;    \r\n    &:hover{\r\n        background:${palette.cyan[4]}\r\n    }\r\n`;\r\n\r\n\r\nconst NavigationBlock = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    margin-bottom:1rem;\r\n`;\r\nconst SelectItems = styled.div`\r\n    select{\r\n        margin-right:0.33rem;\r\n    }\r\n`;\r\nconst PageItems = styled.div`\r\n    button{\r\n        margin-right:0.33rem;\r\n    }\r\n`;\r\n\r\nconst NewMemoBlock = styled.div`\r\n    display: flex;\r\n    justify-content:flex-end;\r\n    margin-bottom:1rem;\r\n`\r\n\r\ninterface PostType {\r\n    _id: string,\r\n    title: string,\r\n    contents: string,\r\n}\r\n\r\nconst PostTemplate = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const [pageState, setPageState] = useState({ page: 1, limit: 10, lastPage: 1, totalPostCount: 0 });\r\n    const [isLoadingList, setIsLoadingList] = useState(false);\r\n\r\n    async function getList() {\r\n        const { page, limit } = pageState;\r\n        setIsLoadingList(true);\r\n        const res = await postApi.getPostList({ page, limit });\r\n        const newPosts = [];\r\n        console.log(res);\r\n\r\n        setPageState({\r\n            ...pageState,\r\n            lastPage: +res.headers['last-page'],\r\n            totalPostCount: +res.headers['total-post-count']\r\n        })\r\n\r\n        for (const d of res.data) {\r\n            newPosts.push({ ...d._doc })\r\n        }\r\n\r\n        setPosts(newPosts);\r\n        setIsLoadingList(false);\r\n    }\r\n\r\n    const onChangeSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        e.preventDefault();\r\n        const { page, limit, totalPostCount, lastPage } = pageState;\r\n\r\n        const nextLimit = +e.target.value;\r\n        const nextLastPage = ((totalPostCount / nextLimit) | 0) + 1;\r\n\r\n        setPageState({ ...pageState, page: 1, limit: nextLimit, lastPage: nextLastPage })\r\n    }\r\n\r\n    const onChangePage = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        let nextPage = pageState.page + (+e.currentTarget.name);\r\n\r\n        if (nextPage < 1) {\r\n            nextPage = 1;\r\n        }\r\n        if (nextPage > pageState.lastPage) {\r\n            nextPage = pageState.lastPage;\r\n        }\r\n\r\n        setPageState({ ...pageState, page: nextPage });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLoadingList) {\r\n            getList();\r\n        }\r\n    }, [pageState.page, pageState.limit])\r\n\r\n    const moveToWrite = () => {\r\n        dispatch(initialize(''));\r\n        dispatch(changeWritingField({ _id: \"\", title: \"\", contents: \"\", tags: [] }))\r\n        history.push('/write', { from: '/postListPage' });\r\n    }\r\n\r\n    return (\r\n        <PostTemplateBlock>\r\n            <PostListHeader />\r\n\r\n            <NavigationBlock>\r\n                <SelectItems>\r\n                    <select name=\"limits\" onChange={onChangeSelect} >\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                    <span>{pageState.totalPostCount} total posts</span>\r\n                </SelectItems>\r\n                <PageItems>\r\n                    <SButton onClick={onChangePage} name=\"-1\" disabled={pageState.page === 1} className={isLoadingList ? 'loading' : ''}>before</SButton>\r\n                    <SButton onClick={onChangePage} name='1' disabled={pageState.page === pageState.lastPage} className={isLoadingList ? 'loading' : ''}>next</SButton>\r\n                    <span>{pageState.page}/{pageState.lastPage} page</span>\r\n                </PageItems>\r\n            </NavigationBlock>\r\n            <LoadingSpinner className={isLoadingList?'loading':''} />\r\n            {posts.length ? posts.map((post) =>\r\n                <PostItem key={post._id} _id={post._id} title={post.title} contents={post.contents} lastUpdated={post.updatedAt} />\r\n            ) : <div>Write a new memo...</div>}\r\n\r\n            <NewMemoButton onClick={moveToWrite}>+</NewMemoButton>\r\n        </PostTemplateBlock>\r\n    )\r\n}\r\n\r\nexport default PostTemplate","import React from 'react'\r\nimport PostTemplate from '../components/post/PostTemplate';\r\n\r\nconst PostListPage = () => {\r\n    return (\r\n        <div>\r\n            <PostTemplate/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostListPage\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n    position:absolute;\r\n    background:${palette.gray[2]};\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n    .logo-area{\r\n        display:block;\r\n        padding-bottom:2rem;\r\n        text-align:center;\r\n        font-weight:bold;\r\n        letter-spacing:2px;\r\n    }\r\n    box-shadow: 0 0 8px rgba(0,0,0,0.025);\r\n    padding: 2rem;\r\n    width:360px;\r\n    background:white;\r\n    border-radius:2px;\r\n`;\r\n\r\nconst AuthTemplate = ({children}:{children:JSX.Element}) => {\r\n    return (\r\n        <AuthTemplateBlock>\r\n            <WhiteBox>\r\n                <div className=\"logo-area\">\r\n                    <Link to=\"/\">Simple Memo</Link>\r\n                </div>\r\n            </WhiteBox>\r\n            {children}\r\n        </AuthTemplateBlock>\r\n    )\r\n}\r\n\r\nexport default AuthTemplate\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from '../common/Button';\r\n\r\n\r\nconst AuthFormBlock = styled.div`\r\n    h3{\r\n        margin:0;\r\n        margin-bottom:1rem;\r\n        color:${palette.gray[8]};\r\n    }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    font-size:1rem;\r\n    border:none;\r\n    border-bottom:1px solid ${palette.gray[5]};\r\n    padding-bottom:0.5rem;\r\n    outline:none;\r\n    width:100%;\r\n    &:focus{\r\n        color:$oc-teal-7;\r\n        border-bottom: 1px solid ${palette.gray[7]};\r\n    }\r\n    &+&{\r\n        margin-top: 1rem;\r\n    }\r\n`\r\n\r\nconst Footer = styled.div`\r\n    margin-top:2rem;\r\n    text-align:right;\r\n    a{\r\n        color:${palette.gray[6]};\r\n        text-decoration:underline;\r\n        &:hover{\r\n            color:${palette.gray[9]}\r\n        }\r\n    }\r\n`\r\nconst ButtonWithMarginTop = styled(Button)`\r\n    margin-top:1rem;\r\n`;\r\n\r\ninterface MapType {\r\n    [key: string]: string\r\n}\r\n\r\nconst textMap: MapType = {\r\n    \"login\": 'Login',\r\n    \"register\": 'Register'\r\n}\r\n\r\nconst AuthForm = ({ authType, onChange, onSubmit }: { authType: string, onChange: Function, onSubmit: Function }) => {\r\n    const text = textMap[authType];\r\n    \r\n    return (\r\n        <AuthFormBlock>\r\n            <h3>{text}</h3>\r\n            <form onSubmit={(e)=>onSubmit(e)}>\r\n                <StyledInput onChange={(e)=>onChange(e)} autoComplete=\"username\" name=\"username\" placeholder=\"Id\" />\r\n                <StyledInput onChange={(e)=>onChange(e)} type=\"password\" autoComplete=\"new-password\" name=\"password\" placeholder=\"password\" />\r\n                {authType === 'register' && (<StyledInput onChange={(e)=>onChange(e)} autoComplete=\"new-password\" name=\"passwordConfirm\" placeholder=\"passwordConfirm\" type=\"password\" />)}\r\n                <ButtonWithMarginTop cyan fullWidth >{text}</ButtonWithMarginTop>\r\n            </form>\r\n            <Footer>\r\n                {authType === 'login' ? (\r\n                    <Link to='/register'>Go to Register</Link>\r\n                ) : (<Link to=\"/login\">Go To Login</Link>)}\r\n            </Footer>\r\n        </AuthFormBlock>\r\n    )\r\n}\r\n\r\nexport default AuthForm\r\n","import Ajv from 'ajv';\r\n\r\nconst ajv = new Ajv({allErrors:true});\r\n\r\n//Minimum eight characters, at least one letter, one number and one special character:\r\n//js new Regex(is not the same with \\d \\\\d);\r\n//number, integer, string, boolean, array, object or null\r\n\r\nexport const userSchema = {\r\n    \"properties\": {\r\n        \"username\": {\r\n            \"type\": 'string',\r\n            \"pattern\": '^[a-zA-Z0-9]{4,16}$'\r\n        },\r\n        \"password\": {\r\n            \"type\": 'string',\r\n            \"pattern\": '^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{8,32}$'\r\n        }\r\n    },\r\n    \"required\": ['username', 'password']\r\n}\r\n\r\nexport const validate = (schema: Object, data: Object) => {\r\n    const validate = ajv.compile(schema);\r\n    const valid = validate(data);\r\n\r\n    if (!valid) {\r\n        alert(`ID only with alphabet and numbers! [4~16] \\n\\nPassword with at least 1 alphabet, 1 number and 1 special character! [8~32]`)\r\n        return { ...validate.errors, isValid: false };\r\n    }\r\n    return { ...validate, isValid: true }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { changeField, checkAsync, loginAsync } from '../../store/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { validate, userSchema } from '../../lib/validation';\r\nimport { setItem, removeItem, getItem } from '../../lib/localStorageRequest';\r\n\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector(({ auth, loading }: RootStateType) => ({\r\n        ...auth,\r\n        authType: 'login',\r\n        loading: {\r\n            ...loading\r\n        }\r\n    }))\r\n    const { authorized, username, password, loading } = authState;\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value, name } = e.target;\r\n        dispatch(\r\n            changeField({\r\n                ...authState,\r\n                authType: 'login',\r\n                [name]: value\r\n            })\r\n        )\r\n    }\r\n\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const vaildationResult = validate(userSchema, { username, password })\r\n        if (!vaildationResult.isValid) {\r\n            console.log('invalid username or password');\r\n            return;\r\n        }\r\n        dispatch(loginAsync({ username, password }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const localUsername = getItem('username');\r\n        if (localUsername) {\r\n            dispatch(checkAsync(localUsername));\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (authorized && !loading['auth/CHECK'] && !loading['auth/LOGIN']) {\r\n            setItem('username', JSON.stringify(username));\r\n            history.push('/postListPage', { from: '/login' });\r\n        }\r\n    }, [authorized,loading['auth/CHECK'],loading['auth/LOGIN']])\r\n\r\n    return (\r\n        <AuthForm authType=\"login\" onChange={onChange} onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport LoginForm from '../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n    \r\n    return (\r\n        <AuthTemplate>\r\n            <LoginForm/>\r\n        </AuthTemplate>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { changeField, registerAsync } from '../../store/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { validate, userSchema } from '../../lib/validation';\r\nimport {setItem,removeItem} from '../../lib/localStorageRequest';\r\n\r\nconst RegisterForm = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector(({ auth, loading }: RootStateType) => ({\r\n        ...auth,\r\n        authType: 'register',\r\n        loading:{...loading}\r\n    }))\r\n    const { authorized, username, password, passwordConfirm, loading } = authState;\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value, name } = e.target;\r\n        dispatch(\r\n            changeField({\r\n                ...authState,\r\n                authType: 'register',\r\n                [name]: value\r\n            })\r\n        )\r\n    }\r\n\r\n    const onSubmit = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        if (password !== passwordConfirm) {\r\n            alert('password is diffrent');\r\n            return;\r\n        }\r\n        const vaildationResult = validate(userSchema, { username, password })\r\n        if (!vaildationResult.isValid) { return; }\r\n\r\n        dispatch(registerAsync({ username, password }))\r\n    }\r\n\r\n    const checkAuthState = () => {\r\n        if (!authorized && !loading['auth/CHECK']) {\r\n            removeItem('username');\r\n        }\r\n        if (authorized && !loading['auth/CHECK'] &&!loading['auth/REGISTER']) {\r\n                setItem('username', JSON.stringify(username));\r\n                history.push('/postListPage', { from: '/login' });\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        checkAuthState();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (authorized && !loading['auth/REGISTER']) {\r\n                setItem('username', JSON.stringify(username));\r\n                history.push('/postListPage', { from: '/login' });\r\n        }\r\n    }, [loading['auth/REGISTER']])\r\n\r\n    return (\r\n        <AuthForm authType=\"register\" onChange={onChange} onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react'\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport RegisterForm from '../containers/auth/RegisterForm';\r\n\r\n\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <RegisterForm/>\r\n        </AuthTemplate>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-quill/dist/quill.bubble.css';\r\n\r\nimport palette from '../../lib/styles/palette';\r\n\r\nimport Button from '../common/Button';\r\n\r\nimport { writePostAsync, changeWritingField, finalizeWriting, initialize, updatePostAsync } from '../../store/write';\r\nimport { RootStateType } from '../../store';\r\n\r\n\r\n\r\n// import useInterval from '../../lib/hook/useInterval';\r\n\r\nconst EditorBlock = styled.div`\r\n    padding-top:5rem;\r\n    padding-bottom:5rem;\r\n    margin: 1rem 4rem;\r\n    \r\n .ql-container {\r\n  border-bottom-left-radius: 0.5em;\r\n  border-bottom-right-radius: 0.5em;\r\n  background: #fefcfc;\r\n}\r\n.ql-snow.ql-toolbar {\r\n  display: block;\r\n  background: #eaecec;\r\n  border-top-left-radius: 0.5em;\r\n  border-top-right-radius: 0.5em;\r\n}\r\n\r\n .ql-bubble .ql-editor {\r\n  border: 1px solid #ccc;\r\n  border-radius: 0.5em;\r\n}\r\n .ql-editor {\r\n  min-height: 18em;\r\n}\r\n\r\n.themeSwitcher {\r\n  margin-top: 0.5em;\r\n  font-size: small;\r\n}\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n    font-size:3rem;\r\n    outline:none;\r\n    padding-bottom:0.5rem;\r\n    border:none;\r\n    border-bottom:1px solid ${palette.gray[4]};\r\n    margin-bottom:2rem;\r\n    width:100%;\r\n`;\r\nconst ButtonWrapper = styled.div`\r\n    margin:1rem;\r\n    margin-left:0;\r\n    display:flex;\r\n    justify-content:space-between;\r\n`;\r\n\r\n\r\nconst quillOption = {\r\n    theme: 'snow',\r\n    placeholder: 'write here...',\r\n    modules: {\r\n        toolbar: [\r\n            [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n            [{ size: [] }],\r\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n            { 'indent': '-1' }, { 'indent': '+1' }],\r\n            //['link', 'image', 'video'],\r\n            ['clean']\r\n        ],\r\n        clipboard: {\r\n            // toggle to add extra line breaks when pasting HTML:\r\n            matchVisual: false,\r\n        }\r\n    },\r\n    formats: [\r\n        'header', 'font', 'size',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n        'list', 'bullet', 'indent',\r\n        'link', 'image', 'video'\r\n    ]\r\n}\r\n\r\nconst Editor = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const writeState = useSelector(({ write, loading }: RootStateType) =>\r\n        ({ ...write, loading: { ...loading } }));\r\n\r\n\r\n    const { title, contents, tags, finishWriting, loading, _id } = writeState;\r\n\r\n    const [editorState, setEditorState] = useState({ title: '', contents: '', theme: 'snow' });\r\n\r\n    const onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        dispatch(changeWritingField({ ...writeState, title: value }));\r\n    }\r\n\r\n    const onChangeContents = (text: string) => {\r\n        dispatch(changeWritingField({ ...writeState, contents: text }));\r\n    }\r\n\r\n    const onChangeSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        e.preventDefault();\r\n        setEditorState({ ...editorState, theme: e.target.value })\r\n    }\r\n\r\n    // useInterval(dispatch(writePostAsync({ title, body, tags })), 60000);\r\n\r\n    const onGoingBack = () => {\r\n        dispatch(finalizeWriting(''));\r\n        if (!_id) { dispatch(writePostAsync({ title, contents, tags })) }\r\n        else {\r\n            dispatch(updatePostAsync({ _id, title, contents }))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(initialize(''))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (finishWriting && !loading['write/WRITE_POST'] && !loading['write/UPDATE_POST']) {\r\n            history.push('/postListPage', { from: '/write' });\r\n        }\r\n    }, [loading['write/WRITE_POST'], loading['write/UPDATE_POST'], finishWriting])\r\n\r\n    return (\r\n        <EditorBlock>\r\n            <ButtonWrapper>\r\n                <Button cyan={true} fullWidth={false} onClickFunction={onGoingBack}>Back to lists</Button>\r\n            </ButtonWrapper>\r\n\r\n            <TitleInput onChange={e => onChangeTitle(e)} name='title'\r\n                placeholder=\"Write a title here\" value={writeState.title} />\r\n            <ReactQuill\r\n                onChange={e => onChangeContents(e)}\r\n                theme={editorState.theme}\r\n                modules={quillOption.modules}\r\n                formats={quillOption.formats}\r\n                placeholder={quillOption.placeholder}\r\n                value={writeState.contents}\r\n            />\r\n            <div className=\"themeSwitcher\">\r\n                <label>Theme </label>\r\n                <select onChange={(e) =>\r\n                    onChangeSelect(e)}>\r\n                    <option value=\"snow\">Snow</option>\r\n                    <option value=\"bubble\">Bubble</option>\r\n                </select>\r\n            </div>\r\n        </EditorBlock>\r\n    )\r\n}\r\n\r\nexport default Editor","import React from 'react'\r\nimport Editor from '../components/write/Editor';\r\n\r\n\r\nconst WritePage = () => {\r\n    return (\r\n        <div>\r\n            <Editor/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WritePage","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport PostListPage from './pages/PostListPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport WritePage from './pages/WritePage';\n\nfunction App() {\n  return (\n    <div>\n      <Route path={[\"/\",\"/login\"]} component={LoginPage} exact/>\n      <Route path=\"/register\" component={RegisterPage} exact/>\n      <Route path='/postListPage' component={PostListPage} exact />\n      <Route path=\"/write\" component={WritePage} exact/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nimport auth from './auth';\r\nimport loading from './loading';\r\nimport write from './write';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whiteList: ['auth', 'loading', 'write']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    auth, loading, write\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport rootReducer from './store';\nimport { tempSetUser, checkAsync, TEMP_SET_USER } from './store/auth';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconsole.log(navigator.language);\n\nconst persister = persistStore(store);\n\nasync function loadUser() {\n  try {\n    const username = localStorage.getItem('username');\n    if (!username) return;\n\n    store.dispatch({ type: TEMP_SET_USER, payload: username });\n    await checkAsync(() => { });\n\n    if (store.getState().auth.checkError) {\n      localStorage.removeItem('username');\n    }\n  } catch (e) { console.log(e) }\n}\n\nloadUser();\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persister}>\n        <Router history={history} >\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}