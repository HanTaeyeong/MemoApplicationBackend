{"version":3,"sources":["history.ts","lib/styles/palette.ts","components/common/Button.tsx","store/loading.ts","lib/createRequest.ts","store/auth.ts","lib/api/client.ts","lib/api/auth.ts","lib/ErrorCodes.ts","lib/localStorageRequest.ts","components/post/ListHeader.tsx","components/post/PostItem.tsx","components/post/LoadingSpinner.tsx","lib/api/post.ts","store/write.ts","components/post/PostTemplate.tsx","pages/PostListPage.tsx","components/auth/AuthTemplate.tsx","components/auth/AuthForm.tsx","lib/validation.ts","containers/auth/LoginForm.tsx","pages/LoginPage.tsx","containers/auth/RegisterForm.tsx","pages/RegisterPage.tsx","components/write/WriteTemplate.tsx","pages/WritePage.tsx","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx"],"names":["history","createBrowserHistory","palette","gray","cyan","StyledButton","styled","button","props","fullWidth","css","Button","children","onClickFunction","loadingState","useSelector","loading","isLoading","onClick","className","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","createReducer","state","action","payload","createRequestThunk","type","request","SUCCESS","FAILURE","params","dispatch","a","response","data","error","toJSON","AuthTypeEnum","createRequestActionTypes","client","axios","create","prefix","login","username","password","post","logout","register","check","get","ErrorCodes","200","409","440","441","442","500","450","451","CHANGE_AUTH_TYPE","CHANGE_FIELD","INITIALIZE_FORM","TEMP_SET_USER","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILURE","CHECK","CHECK_SUCCESS","CHECK_FAILURE","changeField","authType","passwordConfirm","authError","initializeForm","registerAsync","authAPI","loginAsync","logoutAsync","checkAsync","initialState","authorized","checkError","auth","message","slice","setItem","itemName","value","localStorage","e","console","log","removeItem","HeaderBlock","div","Header","authState","useDispatch","useHistory","useEffect","push","from","PostItemBlock","ItemHead","ItemSubInfo","span","ItemContent","PostItem","_id","title","contents","lastUpdated","onClickItem","idObject","id","JSON","stringify","LoadingSpinner","getPostList","page","limit","CHANGE_WRITING_FIELD","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","DELETE_POST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","changeWritingField","tags","writePostAsync","updatePostAsync","patch","deletePostAsync","delete","write","postError","PostTemplateBlock","SButton","NewMemoButton","NavigationBlock","SelectItems","PageItems","PostTemplate","useState","posts","setPosts","lastPage","totalPostCount","pageState","setPageState","isLoadingList","setIsLoadingList","postApi","res","newPosts","headers","d","_doc","onChangePage","preventDefault","nextPage","currentTarget","name","parse","getList","ListHeader","onChange","nextLimit","target","nextLastPage","disabled","length","map","updatedAt","PostListPage","AuthTemplateBlock","WhiteBox","AuthTemplate","AuthFormBlock","StyledInput","input","ErrorMessage","Footer","ButtonWithMarginTop","textMap","AuthForm","onSubmit","text","idRef","useRef","passwordRef","current","focus","autoComplete","placeholder","ref","to","ajv","Ajv","allErrors","IdSchema","PasswordSchema","validate","schema","compile","isValid","errors","LoginForm","localUsername","getItem","LoginPage","RegisterForm","RegisterPage","WriteTemplateBlock","TitleInput","ButtonWrapper","quillOption","theme","modules","toolbar","size","clipboard","matchVisual","formats","WriteTemplate","moveToPostList","setMoveToPostList","editorState","setEditorState","useLayoutEffect","onChangeTitle","onChangeSelect","WritePage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","whiteList","rootReducer","combineReducers","persistReducer","store","createStore","applyMiddleware","thunk","navigator","language","persister","persistStore","getState","loadUser","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.84f6e207.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","const palette = {\r\n    gray: [\r\n      '#f8f9fa',\r\n      '#f1f3f5',\r\n      '#e9ecef',\r\n      '#dee2e6',\r\n      '#ced4da',\r\n      '#adb5bd',\r\n      '#868e96',\r\n      '#495057',\r\n      '#343a40',\r\n      '#212529',\r\n    ],\r\n    cyan: [\r\n      '#e3fafc',\r\n      '#c5f6fa',\r\n      '#99e9f2',\r\n      '#66d9e8',\r\n      '#3bc9db',\r\n      '#22b8cf',\r\n      '#15aabf',\r\n      '#1098ad',\r\n      '#0c8599',\r\n      '#0b7285',\r\n    ],\r\n  };\r\n  \r\n  export default palette;","import React from 'react'\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { useSelector } from 'react-redux';\r\n\r\ninterface ButtonPropsType {\r\n    cyan: Boolean;\r\n    fullWidth: Boolean;\r\n}\r\n\r\nconst StyledButton = styled.button`\r\n    position:relative;\r\n\r\n    border:none;\r\n    border-radius: 5rem;\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n    box-shadow: 0.25rem 0.25rem 0.5rem 0.2rem rgba(0, 0, 0, 0.1);\r\n    background: ${palette.gray[8]};\r\n    &:hover{\r\n        background: ${palette.gray[6]};\r\n    }\r\n\r\n    ${(props: ButtonPropsType) => props.fullWidth &&\r\n        css`\r\n    padding-top:0.75rem;\r\n    padding-bottom:0.75rem;\r\n    width:100%;\r\n    font-size:1.33rem;\r\n    `}\r\n    \r\n    ${(props: ButtonPropsType) => props.cyan && css`\r\n        background:${palette.cyan[5]};\r\n        &:hover{\r\n            background:${palette.cyan[4]}\r\n        }\r\n    `}\r\n    \r\n        &.loading{\r\n            background:${palette.cyan[1]};\r\n            cursor:not-allowed;\r\n            .text{\r\n            visibility:hidden;\r\n        }\r\n\r\n        &::after{\r\n            content:\"\";\r\n            position:absolute;\r\n            width:1.25rem;\r\n            height:1.25rem;\r\n            border:0.25rem solid transparent;\r\n            border-top-color:${palette.cyan[5]};\r\n            border-radius:50%;\r\n            /* top:50%;\r\n            left:50%;\r\n            transform:translate(-50%,-50%);\r\n             */\r\n             top:0;\r\n             left:0;\r\n             bottom:0;\r\n             right:0;\r\n             margin:auto;\r\n            animation:button-loading-spinner 1s ease infinite;\r\n        }\r\n        }\r\n        \r\n        @keyframes button-loading-spinner{\r\n            from{\r\n                transform:rotate(0turn);\r\n            }\r\n            to{\r\n                transform:rotate(1turn);\r\n            }\r\n        }\r\n`;\r\n\r\ninterface ButtonType {\r\n    children: String;\r\n    cyan: Boolean;\r\n    fullWidth: Boolean;\r\n\r\n    onClickFunction?: Function | undefined;\r\n}\r\n\r\nconst Button = ({ children, cyan, fullWidth, onClickFunction }: ButtonType) => {\r\n\r\n    const loadingState = useSelector(({ loading }: RootStateType) => ({ ...loading }));\r\n    const isLoading = loadingState['auth/LOGIN'] || loadingState['auth/REGISTER'] || loadingState['write/UPDATE_POST'] || loadingState['write/WRITE_POST'];\r\n\r\n    const onClick = () => {\r\n        if (onClickFunction) {\r\n            return onClickFunction();\r\n        } else {\r\n            return () => { }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledButton cyan={cyan} fullWidth={fullWidth}\r\n            onClick={onClick} className={isLoading ? 'loading' : ''}>\r\n            <span className={'text'}>{children}</span>\r\n        </StyledButton>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import { createAction, createReducer } from 'typesafe-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(START_LOADING, requestType => requestType)();\r\nexport const finishLoading = createAction(FINISH_LOADING, requestType => requestType)();\r\n\r\nconst initialState = {\r\n    'auth/LOGIN': false,\r\n    'auth/REGISTER': false,\r\n    'auth/LOGOUT': false,\r\n    'auth/CHECK': false,\r\n\r\n    'write/CHANGE_WRITING_FIELD':false,\r\n    'write/WRITE_POST': false,\r\n    'write/GET_POST_LIST': false,\r\n    'write/UPDATE_POST': false,\r\n    'write/DELETE_POST': false\r\n};\r\n\r\nconst loading = createReducer(initialState,\r\n    {\r\n        [START_LOADING]: (state, action) => ({ ...state, [action.payload]: true }),\r\n        [FINISH_LOADING]: (state, action) => ({ ...state, [action.payload]: false }),\r\n    }\r\n)\r\n\r\nexport default loading;","import { startLoading, finishLoading } from '../store/loading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport function createRequestThunk(type: string, request: Function) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n\r\n    return (params: any) => async (dispatch: Dispatch<any>) => {\r\n        dispatch({ type });\r\n        dispatch(startLoading(type));\r\n\r\n        try {\r\n            const response = await request(params);\r\n            dispatch({\r\n                type: SUCCESS,\r\n                payload: response.data\r\n            });\r\n        } catch (e) {\r\n\r\n            dispatch({\r\n                type: FAILURE,\r\n                payload: {error:e.toJSON()},\r\n            });\r\n        } finally {\r\n            dispatch(finishLoading(type));\r\n        }\r\n    }\r\n}\r\n\r\nexport const createRequestActionTypes = (type: string) => {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return [type, SUCCESS, FAILURE];\r\n}","import { createAction, ActionType, createReducer, Action } from 'typesafe-actions';\r\nimport { createRequestThunk, createRequestActionTypes } from '../lib/createRequest';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport ErrorCodes from '../lib/ErrorCodes';\r\n\r\nconst CHANGE_AUTH_TYPE = 'auth/CHANGE_AUTH_TYPE';\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nexport const TEMP_SET_USER = 'auth/TEMP_SET_USER';\r\n\r\nexport const [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes('auth/REGISTER');\r\nexport const [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\r\nexport const [LOGOUT, LOGOUT_SUCCESS, LOGOUT_FAILURE] = createRequestActionTypes('auth/LOGOUT');\r\nexport const [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('auth/CHECK');\r\n\r\nexport const changeAuthType = createAction(CHANGE_AUTH_TYPE, ({ authType }) => ({ authType }))();\r\n\r\nexport const changeField = createAction(CHANGE_FIELD, ({ authType, username, password, passwordConfirm, authError }) => ({\r\n    authType, username, password, passwordConfirm, authError\r\n}))();\r\nexport const initializeForm = createAction(INITIALIZE_FORM, authType => authType)();\r\nexport const tempSetUser = createAction(TEMP_SET_USER, username => username)();\r\n\r\nexport const register = createAction(REGISTER, ({ username, password }) => ({\r\n    username, password\r\n}))\r\nexport const registerAsync = createRequestThunk(REGISTER, authAPI.register);\r\n\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n    username, password\r\n}))\r\nexport const loginAsync = createRequestThunk(LOGIN, authAPI.login);\r\n\r\nexport const logout = createAction(LOGOUT, ({ username }) => ({ username }));\r\nexport const logoutAsync = createRequestThunk(LOGOUT, authAPI.logout);\r\n\r\n\r\nexport const check = createAction(CHECK, ({ username }) => ({ username }));\r\nexport const checkAsync = createRequestThunk(CHECK, authAPI.check);\r\n\r\n\r\ninterface AuthMapType {\r\n    [key: string]: Object;\r\n}\r\n\r\nenum AuthTypeEnum {\r\n    'login' = 'login',\r\n    'register' = 'register'\r\n}\r\n\r\ninterface AuthStateType {\r\n    authType: AuthTypeEnum;\r\n    username: string;\r\n    password: string;\r\n    passwordConfirm: string | null | undefined;\r\n    authorized: boolean | null,\r\n    authError: any;\r\n    checkError: any;\r\n}\r\n\r\nconst initialState: AuthStateType = {\r\n    authType: AuthTypeEnum['register'],\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    authorized: false,\r\n    authError: null,\r\n    checkError: null,\r\n}\r\n\r\nconst auth = createReducer(initialState,\r\n    {\r\n        [TEMP_SET_USER]: (state, { payload: username }) => ({ ...state, username }),\r\n        [CHANGE_AUTH_TYPE]: (state, { payload: { authType } }) => ({ ...state, authType }),\r\n        [CHANGE_FIELD]: (state, { payload: { authType, username, password, passwordConfirm, authError } }) => ({ ...state, authType, username, password, passwordConfirm, authError }),\r\n        [INITIALIZE_FORM]: (state, { payload: { authType } }) => ({ ...initialState }),\r\n\r\n        [REGISTER_SUCCESS]: (state: AuthStateType, { payload: { auth } }: any) => ({ ...state, authorized: true, authError: false }),\r\n        [REGISTER_FAILURE]: (state: AuthStateType, { payload: { error } }: any) => ({ ...state, authorized: false, authError: ErrorCodes[+error.message.slice(-3)] }),\r\n\r\n        [LOGIN_SUCCESS]: (state: AuthStateType, { payload: { username, password } }: any) => ({ ...state, authorized: true, authError: false }),\r\n        [LOGIN_FAILURE]: (state: AuthStateType, { payload: { error } }: any) => ({ ...state, authorized: false, authError: ErrorCodes[+error.message.slice(-3)] }),\r\n\r\n        [CHECK_SUCCESS]: (state: AuthStateType, { payload: username }: any) => ({ ...state, authorized: true, checkError: false }),\r\n        [CHECK_FAILURE]: (state: AuthStateType, { payload: error }: any) => ({ ...state, authorized: false, checkError: error }),\r\n\r\n        [LOGOUT_SUCCESS]: (state: AuthStateType, { payload: username }: any) => ({ ...initialState }),\r\n        [LOGOUT_FAILURE]: (state: AuthStateType, { payload: username }: any) => ({ ...initialState })\r\n    }\r\n)\r\n\r\nexport default auth;","import axios from 'axios';\r\n\r\n//axios.defaults.baseURL = 'https://ec2-52-79-233-83.ap-northeast-2.compute.amazonaws.com:4311/simplememo.com'\r\n\r\n// axios.defaults.baseURL = 'http://localhost:4311';\r\n\r\n\r\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\n// axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import client from './client';\r\n\r\nconst prefix='/api/auth';\r\n\r\nexport const login = async ({ username, password }: { username: string, password: string }) =>\r\n    await client.post(prefix+'/login', { username, password });\r\n\r\nexport const logout = async () => {\r\n    return await client.post(prefix+'/logout')\r\n};\r\n\r\nexport const register = async ({ username, password }: { username: string, password: string }) =>\r\n    await client.post(prefix+'/register', { username, password })\r\n\r\nexport const check = async () => await client.get(prefix+'/check');\r\n\r\n\r\n","interface ErrorCodesType {\r\n    [key: number]: string\r\n};\r\n\r\nconst ErrorCodes: ErrorCodesType = {\r\n    //server\r\n    200: 'okay', \r\n    409: '[ID] Already existing ID',\r\n    440: 'Username or Password is empty.',\r\n    441: '[ID] There is no such user.',\r\n    442: '[PW] Invailid password.',\r\n    500: '[SV] Internal server error.',\r\n\r\n    //client\r\n    450:'okay',\r\n    451:'',\r\n    \r\n}\r\n\r\nexport default ErrorCodes;","export const getItem = (itemName: string) => {\r\n    try {\r\n        const result = localStorage.getItem(itemName);\r\n        return result ? result :'';\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const setItem = (itemName: string, value: string) => {\r\n    try {\r\n        return localStorage.setItem(itemName, value);\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const removeItem = (itemName: string) => {\r\n    try {\r\n        return localStorage.removeItem(itemName);\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport Button from '../common/Button';\r\nimport { initializeForm, logoutAsync } from '../../store/auth';\r\nimport { removeItem } from '../../lib/localStorageRequest';\r\n\r\nconst HeaderBlock = styled.div`\r\n    width:100%;\r\n    height:4rem;\r\n    \r\n    display:flex;\r\n    align-items:center;\r\n    \r\n    background:white;\r\n    box-shadow:0px 2px 4px rgba(0,0,0,0.08);\r\n    margin-bottom:1rem;\r\n\r\n    justify-content:space-between;\r\n\r\n    .logo{\r\n        font-size:1.125rem;\r\n        font-weight:800;\r\n        letter-spacing:2px;\r\n    }\r\n    .right{\r\n      \r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    const authState = useSelector(({ auth, loading }: RootStateType) =>\r\n        ({ username: auth.username, authorized: auth.authorized, loading: { ...loading } }))\r\n    const { authorized, username } = authState;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onLogout = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        dispatch(initializeForm);\r\n        removeItem('username');\r\n        dispatch(logoutAsync(''));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!authorized && !username) {\r\n            history.push('/login', { from: 'PostListPage' })\r\n        }\r\n    }, [authorized, username])\r\n\r\n    return (\r\n        <HeaderBlock>\r\n                <span className='logo'>Simple Memo</span>\r\n                <Button cyan={false} fullWidth={false} onClickFunction={ onLogout}>Logout</Button>\r\n        </HeaderBlock>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { changeWritingField } from '../../store/write';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst PostItemBlock = styled.div`\r\n\r\nmargin-top:0.5rem;\r\nborder-bottom:1px solid ${palette.gray[2]};\r\ncursor:pointer;\r\n`;\r\n\r\nconst ItemHead = styled.div`\r\ndisplay:flex;\r\n\r\nflex-direction:row;\r\njustify-content:space-between;\r\n    \r\n    .title{    \r\n        font-size:1.125rem;\r\n        font-weight:700;\r\n        margin-bottom:0.5rem;\r\n    }\r\n`\r\n\r\nconst ItemSubInfo = styled.span`\r\n    color:${palette.gray[6]};\r\n   \r\n    height:1.5rem;\r\n    span+span:before{\r\n        color:${palette.gray[5]};\r\n        padding-left:0.25rem;\r\n        padding-right:0.25rem;\r\n        content:'\\\\B7';\r\n    }\r\n`\r\nconst ItemContent = styled.div`\r\n    font-size:0.77rem;\r\n    color:${palette.gray[8]};\r\n    margin-bottom:2rem;\r\n    \r\n    `\r\ninterface PostItemType {\r\n    _id: string,\r\n    title: string,\r\n    contents: string,\r\n    lastUpdated: string,\r\n    onClickItem?:Function,\r\n}\r\n\r\n\r\nconst PostItem = ({ _id, title, contents, lastUpdated, onClickItem }: PostItemType) => {\r\n    const idObject={_id,title,contents};\r\n\r\n    return (\r\n        <PostItemBlock id={JSON.stringify(idObject)} title={title} onClick={(e)=>onClickItem?onClickItem(e):{}}>\r\n            <ItemHead>\r\n                <span className=\"title\">{title}</span>\r\n                <ItemSubInfo>\r\n                    <span><b>Last update</b></span>\r\n                    <span>{lastUpdated.slice(0, 10)}</span>\r\n                </ItemSubInfo>\r\n            </ItemHead>\r\n\r\n            <ItemContent>\r\n                {contents}\r\n            </ItemContent>\r\n        </PostItemBlock>\r\n    )\r\n}\r\n\r\nexport default PostItem","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst LoadingSpinner=styled.div`\r\n    position:fixed;\r\n    margin:auto;\r\n    visibility:hidden;\r\n    top:0;\r\n    left:0;\r\n    bottom:0;\r\n    right:0;\r\n    margin:auto;\r\n    width:0;\r\n    height:0;\r\n    background:black;\r\n\r\n    &.loading{\r\n        visibility:visible;\r\n    }\r\n    &::after{\r\n            content:\"\";\r\n            position:absolute;\r\n            width:5rem;\r\n            height:5rem;\r\n            border:0.5rem solid transparent;\r\n            border-top-color:${palette.cyan[5]};\r\n            border-radius:50%;\r\n            /* top:50%;\r\n            left:50%;\r\n            transform:translate(-50%,-50%);\r\n             */\r\n             top:0;\r\n             left:0;\r\n             bottom:0;\r\n             right:0;\r\n             margin:auto;\r\n            animation:button-loading-spinner 1s ease infinite;\r\n        }\r\n        \r\n        @keyframes button-loading-spinner{\r\n            from{\r\n                transform:rotate(0turn);\r\n            }\r\n            to{\r\n                transform:rotate(1turn);\r\n            }\r\n        }\r\n`;\r\n\r\nexport default LoadingSpinner;\r\n","import client from './client';\r\n\r\nconst prefix = '/api/post';\r\n\r\nexport const getPostList = ({ page, limit }: { page: number, limit: number }) => client.get(`${prefix}/get?page=${page}&limit=${limit}`)\r\n\r\nexport const writePost = ({ title, contents, tags }: { title: string, contents: string, tags: string[] | undefined }) =>\r\n    client.post(prefix + '/write', { title, contents, tags });\r\n\r\nexport const readPost = (id: string) =>\r\n    client.get(`${prefix}/read/${id}`);\r\n\r\nexport const deletePost = ({_id}:{_id:string}) =>\r\n    client.delete(`${prefix}/delete/${_id}`);\r\n\r\nexport const updatePost = ({ _id, title, contents, tags }: { _id: string, title: string, contents: string, tags: string[] | undefined }) =>\r\n    client.patch(`${prefix}/update/${_id}`, { title, contents, tags })\r\n","import { createAction, createReducer } from 'typesafe-actions';\r\nimport { createRequestThunk, createRequestActionTypes } from '../lib/createRequest';\r\nimport * as postApi from '../lib/api/post';\r\n\r\nconst CHANGE_WRITING_FIELD = 'write/CHANGE_WRITING_FIELD';\r\n\r\n\r\nconst [WRITE_POST, WRITE_POST_SUCCESS, WRITE_POST_FAILURE] = createRequestActionTypes('write/WRITE_POST');\r\nconst [UPDATE_POST, UPDATE_POST_SUCCESS, UPDATE_POST_FAILURE] = createRequestActionTypes('write/UPDATE_POST');\r\nconst [DELETE_POST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE] = createRequestActionTypes('write/DELETE_POST');\r\n\r\nexport const changeWritingField = createAction(CHANGE_WRITING_FIELD, ({ _id, title, contents, tags }) =>\r\n    ({ _id, title, contents, tags }))();\r\n\r\nexport const writePost = createAction(WRITE_POST, ({ title, contents, tags }) => ({ title, contents, tags }))\r\nexport const writePostAsync = createRequestThunk(WRITE_POST, postApi.writePost);\r\n\r\nexport const updatePost = createAction(UPDATE_POST, ({ _id, title, contents }) => ({ _id, title, contents }));\r\nexport const updatePostAsync = createRequestThunk(UPDATE_POST, postApi.updatePost);\r\n\r\nexport const deletePost = createAction(DELETE_POST, ({ _id }) => ({ _id }));\r\nexport const deletePostAsync = createRequestThunk(DELETE_POST, postApi.deletePost);\r\n\r\n\r\nexport interface WriteType {\r\n    _id: string,\r\n    title: string,\r\n    contents: string,\r\n    tags: string[] | undefined,\r\n    username: string,\r\n\r\n    postError: boolean;\r\n}\r\nconst initialState: WriteType = {\r\n    _id: '',\r\n    title: '',\r\n    contents: '',\r\n    tags: [],\r\n    username: '',\r\n\r\n    postError: false,\r\n}\r\n\r\n\r\nconst write = createReducer(initialState, {\r\n    [CHANGE_WRITING_FIELD]: (state: WriteType, { payload: { _id, title, contents, tags } }: any) => ({ ...state, _id, title, contents, tags }),\r\n\r\n    [WRITE_POST_SUCCESS]: (state: WriteType) => ({ ...state, postError: false }),\r\n    [WRITE_POST_FAILURE]: (state: WriteType) => ({ ...state, postError: true }),\r\n\r\n    [UPDATE_POST_SUCCESS]: (state: WriteType) => ({ ...state, postError: false }),\r\n    [UPDATE_POST_FAILURE]: (state: WriteType) => ({ ...state, postError: true }),\r\n\r\n    [DELETE_POST_SUCCESS]: (state: WriteType) => ({ ...state, postError: false }),\r\n    [DELETE_POST_FAILURE]: (state: WriteType) => ({ ...state, postError: false })\r\n})\r\n\r\nexport default write;\r\n\r\n\r\n","import React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport history from '../../history';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport ListHeader from './ListHeader';\r\nimport PostItem from './PostItem';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport palette from '../../lib/styles/palette';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { changeWritingField } from '../../store/write';\r\n\r\nimport * as postApi from '../../lib/api/post';\r\n\r\nconst PostTemplateBlock = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n`;\r\n// { children: String,cyan:Boolean,fullWidth:Boolean }\r\n\r\n\r\nconst SButton = styled.button`\r\n    border:none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    background: ${palette.gray[8]};\r\n    &:hover{\r\n        background: ${palette.gray[6]};\r\n    }\r\n\r\n    &:disabled, \r\n    &.loading\r\n    {\r\n        background:${palette.gray[3]};\r\n        color:${palette.gray[4]};\r\n        cursor:not-allowed;\r\n    }\r\n`;\r\n\r\nconst NewMemoButton = styled.button`\r\n    position:fixed;\r\n    width:3rem;\r\n    height:3rem;\r\n    font-size:3rem;\r\n    right:3rem;\r\n    bottom:3rem;\r\n    border-radius:100%;\r\n    \r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n\r\n    background:${palette.cyan[5]};\r\n    color:white;    \r\n    &:hover{\r\n        background:${palette.cyan[4]}\r\n    }\r\n`;\r\n\r\n\r\nconst NavigationBlock = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    margin-bottom:1rem;\r\n`;\r\nconst SelectItems = styled.div`\r\n    select{\r\n        margin-right:0.33rem;\r\n    }\r\n`;\r\nconst PageItems = styled.div`\r\n    button{\r\n        margin-right:0.33rem;\r\n    }\r\n`;\r\n\r\nconst NewMemoBlock = styled.div`\r\n    display: flex;\r\n    justify-content:flex-end;\r\n    margin-bottom:1rem;\r\n`\r\n\r\ninterface ItemType {\r\n    _id: string,\r\n    title: string,\r\n    contents: string,\r\n}\r\n\r\nconst PostTemplate = () => {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(({ loading }: RootStateType) => loading)\r\n    const write = useSelector(({ write }: RootStateType) => write)\r\n    const [posts, setPosts] = useState<any[]>([]);\r\n    const [pageState, setPageState] = useState({ page: 1, limit: 10, lastPage: 1, totalPostCount: 0 });\r\n    const [isLoadingList, setIsLoadingList] = useState(false);\r\n\r\n    async function getList() {\r\n        const { page, limit } = pageState;\r\n        setIsLoadingList(true);\r\n        const res = await postApi.getPostList({ page, limit });\r\n        const newPosts = [];\r\n\r\n        setPageState({\r\n            ...pageState,\r\n            lastPage: +res.headers['last-page'],\r\n            totalPostCount: +res.headers['total-post-count']\r\n        })\r\n\r\n        for (const d of res.data) {\r\n            newPosts.push({ ...d._doc })\r\n        }\r\n        console.log(newPosts);\r\n        \r\n        setPosts(newPosts);\r\n        setIsLoadingList(false);\r\n    }\r\n\r\n    const onChangeSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        e.preventDefault();\r\n        const { page, limit, totalPostCount, lastPage } = pageState;\r\n\r\n        const nextLimit = +e.target.value;\r\n        const nextLastPage = ((totalPostCount / nextLimit) | 0) + 1;\r\n\r\n        setPageState({ ...pageState, page: 1, limit: nextLimit, lastPage: nextLastPage })\r\n    }\r\n\r\n    const onChangePage = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        let nextPage = pageState.page + (+e.currentTarget.name);\r\n\r\n        if (nextPage < 1) {\r\n            nextPage = 1;\r\n        }\r\n        if (nextPage > pageState.lastPage) {\r\n            nextPage = pageState.lastPage;\r\n        }\r\n\r\n        setPageState({ ...pageState, page: nextPage });\r\n    };\r\n\r\n    const onClickItem = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        const { _id, title, contents } = JSON.parse(e.currentTarget.id);\r\n\r\n        dispatch(changeWritingField({ ...write, _id, title, contents }));\r\n        \r\n        history.push('/write');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isLoadingList) {\r\n            getList();\r\n        }\r\n    }, [pageState.page, pageState.limit])\r\n\r\n    const moveToWrite = () => {\r\n        dispatch(changeWritingField({ _id: \"\", title: \"\", contents: \"\", tags: [] }))\r\n        history.push('/write');\r\n    }\r\n\r\n    return (\r\n        <PostTemplateBlock>\r\n            <ListHeader />\r\n            <NavigationBlock>\r\n                <SelectItems>\r\n                    <select name=\"limits\" onChange={onChangeSelect} >\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                    <span>{pageState.totalPostCount} total posts</span>\r\n                </SelectItems>\r\n                <PageItems>\r\n                    <SButton onClick={onChangePage} name=\"-1\" disabled={pageState.page === 1} className={isLoadingList ? 'loading' : ''}>before</SButton>\r\n                    <SButton onClick={onChangePage} name='1' disabled={pageState.page === pageState.lastPage} className={isLoadingList ? 'loading' : ''}>next</SButton>\r\n                    <span>{pageState.page}/{pageState.lastPage} page</span>\r\n                </PageItems>\r\n            </NavigationBlock>\r\n            <LoadingSpinner className={isLoadingList ? 'loading' : ''} />\r\n            {posts.length ? posts.map((post) =>\r\n                <PostItem key={post._id} _id={post._id} title={post.title} contents={post.contents} lastUpdated={post.updatedAt} onClickItem={onClickItem} />\r\n            ) : <div>Write a new memo...</div>}\r\n\r\n            <NewMemoButton onClick={moveToWrite}>+</NewMemoButton>\r\n        </PostTemplateBlock>\r\n    )\r\n}\r\n\r\nexport default PostTemplate","import React from 'react'\r\nimport PostTemplate from '../components/post/PostTemplate';\r\n\r\nconst PostListPage = () => {\r\n    return (\r\n        <div>\r\n            <PostTemplate/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostListPage\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n    position:absolute;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    padding-left:1.5rem;\r\n    padding-right:1.5rem;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n    .logo-area{\r\n        display:block;\r\n        text-align:center;\r\n        font-weight:bold;\r\n        letter-spacing:2px;\r\n    }\r\n    font-size:2rem;\r\n    box-shadow: 0 0 8px rgba(0,0,0,0.025);\r\n    padding: 2rem;\r\n    width:360px;\r\n    border-radius:2px;\r\n`;\r\n\r\nconst AuthTemplate = ({children}:{children:JSX.Element}) => {\r\n    return (\r\n        <AuthTemplateBlock>\r\n            <WhiteBox>\r\n                <div className=\"logo-area\">\r\n                    Simple Memo\r\n                </div>\r\n            </WhiteBox>\r\n            {children}\r\n        </AuthTemplateBlock>\r\n    )\r\n}\r\n\r\nexport default AuthTemplate\r\n","import React, { useEffect, useRef } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { changeField } from '../../store/auth';\r\n\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from '../common/Button';\r\n\r\nconst AuthFormBlock = styled.div`\r\n    h3{\r\n        margin-left:1rem;\r\n        margin-bottom:1rem;\r\n        color:${palette.gray[8]};\r\n    }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    font-size:1rem;\r\n    border:1px solid ${palette.gray[5]};\r\n    border-radius:50px;\r\n\r\n    padding:0.5rem;\r\n    padding-left:1rem;\r\n    outline:none;\r\n    width:100%;\r\n    margin-bottom: 1rem;\r\n   \r\n    :focus{\r\n        color:$oc-teal-7;\r\n        border:1px solid ${palette.cyan[5]};\r\n        &.error{\r\n        border:1px solid red;\r\n        }\r\n    }\r\n`\r\nconst ErrorMessage = styled.div`\r\nwidth:100%;\r\n    margin:0 auto;\r\n    color:red;\r\ntext-align:center;\r\nmargin-bottom:1rem;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n    margin-top:2rem;\r\n    text-align:right;\r\n    a{\r\n        color:${palette.gray[6]};\r\n        text-decoration:underline;\r\n        &:hover{\r\n            color:${palette.gray[9]}\r\n        }\r\n    }\r\n`\r\nconst ButtonWithMarginTop = styled(Button)`\r\n    margin-top:1rem;\r\n`;\r\n\r\ninterface MapType {\r\n    [key: string]: string\r\n}\r\n\r\nconst textMap: MapType = {\r\n    \"login\": 'Login',\r\n    \"register\": 'Register'\r\n}\r\n\r\nconst AuthForm = ({ authType, onChange, onSubmit }: { authType: string, onChange: Function, onSubmit: Function }) => {\r\n    const text = textMap[authType];\r\n    const auth = useSelector(({ auth }: RootStateType) => auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const idRef = useRef<HTMLInputElement>(null);\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(changeField({ authError: '' }));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (auth.authError && auth.authError.slice(0, 4) === \"[ID]\") {\r\n            const { current } = idRef;\r\n            current?.focus();\r\n        } else if (auth.authError && auth.authError.slice(0, 4) === \"[PW]\") {\r\n            const { current } = passwordRef;\r\n            current?.focus();\r\n        }\r\n    }, [auth.authError])\r\n\r\n    return (\r\n        <AuthFormBlock>\r\n            <h3>{text}</h3>\r\n            <form onSubmit={(e) => onSubmit(e)}>\r\n                <StyledInput onChange={(e) => onChange(e)} autoComplete=\"username\" name=\"username\"\r\n                    placeholder=\"Id\" ref={idRef} className={auth.authError && 'error'} />\r\n                <StyledInput onChange={(e) => onChange(e)} type=\"password\" autoComplete=\"new-password\"\r\n                    name=\"password\" placeholder=\"password\" ref={passwordRef} className={auth.authError && 'error'} />\r\n\r\n                {authType === 'register' && (<StyledInput onChange={(e) => onChange(e)} autoComplete=\"new-password\" name=\"passwordConfirm\" placeholder=\"passwordConfirm\" type=\"password\" />)}\r\n\r\n                {auth.authError && <ErrorMessage>{auth.authError}</ErrorMessage>}\r\n\r\n                <ButtonWithMarginTop cyan fullWidth >{text}</ButtonWithMarginTop>\r\n            </form>\r\n\r\n            <Footer>\r\n                {authType === 'login' ? (\r\n                    <Link to='/register'>Go to Register</Link>\r\n                ) : (<Link to=\"/login\">Go To Login</Link>)}\r\n            </Footer>\r\n        </AuthFormBlock>\r\n    )\r\n}\r\n\r\nexport default AuthForm\r\n","import Ajv from 'ajv';\r\n\r\nconst ajv = new Ajv({ allErrors: true });\r\n\r\n//Minimum eight characters, at least one letter, one number and one special character:\r\n//js new Regex(is not the same with \\d \\\\d);\r\n//number, integer, string, boolean, array, object or null\r\n\r\n// export const userSchema = {\r\n//     \"properties\": {\r\n//         \"username\": {\r\n//             \"type\": 'string',\r\n//             \"pattern\": '^[a-zA-Z0-9]{4,16}$'\r\n//         },\r\n//         \"password\": {\r\n//             \"type\": 'string',\r\n//             \"pattern\": '^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{8,32}$'\r\n//         }\r\n//     },\r\n//     \"required\": ['username', 'password']\r\n// }\r\n\r\nexport const IdSchema = {\r\n    \"properties\": {\r\n        \"username\": {\r\n            \"type\": 'string',\r\n            \"pattern\": '^[a-zA-Z0-9]{4,16}$'\r\n        }\r\n    },\r\n    \"required\": ['username']\r\n}\r\n\r\nexport const PasswordSchema = {\r\n    \"properties\": {\r\n        \"password\": {\r\n            \"type\": 'string',\r\n            \"pattern\": '^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{8,32}$'\r\n        }\r\n    },\r\n    \"required\": ['password']\r\n}\r\n\r\nexport const validate = (schema: Object, data: Object) => {\r\n    const validate = ajv.compile(schema);\r\n    const valid = validate(data);\r\n\r\n    if (!valid) {\r\n        return { ...validate.errors, isValid: false };\r\n    }\r\n    return { ...validate, isValid: true }\r\n}","import React, { useEffect,useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { changeField, checkAsync, loginAsync } from '../../store/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport history from '../../history';\r\n\r\n\r\nimport { validate, IdSchema, PasswordSchema } from '../../lib/validation';\r\nimport { setItem, removeItem, getItem } from '../../lib/localStorageRequest';\r\n\r\nconst LoginForm = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(({ auth }: RootStateType) => auth);\r\n    const loading = useSelector(({ loading }: RootStateType) => loading);\r\n    \r\n    const idRef=useRef();\r\n    const passwordRef=useRef();\r\n\r\n    const { authorized, username, password } = auth;\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value, name } = e.target;\r\n        dispatch(\r\n            changeField({\r\n                ...auth,\r\n                [name]: value\r\n            })\r\n        )\r\n    }\r\n\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        const idResult = validate(IdSchema, { username })\r\n        if (!idResult.isValid) {\r\n            dispatch(\r\n                changeField({\r\n                    ...auth,\r\n                    authError: '[ID] ID should consists of number and alphabet (4 ~ 16).'\r\n                })\r\n            )\r\n            return;\r\n        }\r\n\r\n        const passwordResult= validate (PasswordSchema, {password});\r\n        if (!passwordResult.isValid) {\r\n            dispatch(\r\n                changeField({\r\n                    ...auth,\r\n                    authError: '[PW] Password with at least 1 number, 1 alphabet, 1 special character! (8~32).'\r\n                })\r\n            )\r\n            return;\r\n        }\r\n\r\n        dispatch(loginAsync({ username, password }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const localUsername = getItem('username');\r\n        if (localUsername) {\r\n            dispatch(checkAsync(localUsername));\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (authorized && !loading['auth/CHECK'] && !loading['auth/LOGIN']) {\r\n            setItem('username', JSON.stringify(username));\r\n            history.push('/postListPage');\r\n        }\r\n    }, [authorized, loading['auth/CHECK'], loading['auth/LOGIN']])\r\n\r\n    return (\r\n        <AuthForm authType=\"login\" onChange={onChange} onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport LoginForm from '../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n    \r\n    return (\r\n        <AuthTemplate>\r\n            <LoginForm/>\r\n        </AuthTemplate>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RootStateType } from '../../store';\r\nimport { changeField, registerAsync } from '../../store/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport history from '../../history';\r\n\r\nimport { validate, IdSchema, PasswordSchema } from '../../lib/validation';\r\nimport { setItem, removeItem } from '../../lib/localStorageRequest';\r\n\r\nconst RegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(({ auth }: RootStateType) => auth);\r\n    const loading = useSelector(({ loading }: RootStateType) => loading);\r\n\r\n    const { authorized, username, password, passwordConfirm } = auth;\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value, name } = e.target;\r\n        dispatch(\r\n            changeField({\r\n                ...auth,\r\n                [name]: value\r\n            })\r\n        )\r\n    }\r\n\r\n    const onSubmit = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        if (password !== passwordConfirm) {\r\n            dispatch(changeField({\r\n                ...auth, authError: '[PW] Passwords are not same.'\r\n            }))\r\n            return;\r\n        }\r\n\r\n        const idResult = validate(IdSchema, { username })\r\n        if (!idResult.isValid) {\r\n            dispatch(\r\n                changeField({\r\n                    ...auth,\r\n                    authError: '[ID] ID should consists of number and alphabet (4 ~ 16).'\r\n                })\r\n            )\r\n            return;\r\n        }\r\n\r\n        const passwordResult = validate(PasswordSchema, { password });\r\n        if (!passwordResult.isValid) {\r\n            dispatch(\r\n                changeField({\r\n                    ...auth,\r\n                    authError: '[PW] Password with at least 1 number, 1 alphabet, 1 special character! (8~32).'\r\n                })\r\n            )\r\n            return;\r\n        }\r\n        dispatch(registerAsync({ username, password }))\r\n    }\r\n\r\n    const checkAuthState = () => {\r\n        if (!authorized && !loading['auth/CHECK']) {\r\n            removeItem('username');\r\n        }\r\n        if (authorized && !loading['auth/CHECK'] && !loading['auth/REGISTER']) {\r\n            setItem('username', JSON.stringify(username));\r\n            history.push('/postListPage');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        checkAuthState();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (authorized && !loading['auth/REGISTER']) {\r\n            setItem('username', JSON.stringify(username));\r\n            history.push('/postListPage');\r\n        }\r\n    }, [loading['auth/REGISTER']])\r\n\r\n    return (\r\n        <AuthForm authType=\"register\" onChange={onChange} onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react'\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport RegisterForm from '../containers/auth/RegisterForm';\r\n\r\n\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <RegisterForm/>\r\n        </AuthTemplate>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n","import React, { useState, useEffect, useLayoutEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport history from '../../history';\r\nimport styled from 'styled-components';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-quill/dist/quill.bubble.css';\r\n\r\nimport palette from '../../lib/styles/palette';\r\n\r\nimport Button from '../common/Button';\r\n\r\nimport { writePostAsync, changeWritingField, updatePostAsync, deletePostAsync } from '../../store/write';\r\nimport { RootStateType } from '../../store';\r\n\r\n// import useInterval from '../../lib/hook/useInterval';\r\n\r\nconst WriteTemplateBlock = styled.div`\r\n    padding-top:5rem;\r\n    padding-bottom:5rem;\r\n    margin: 1rem 4rem;\r\n    \r\n .ql-container {\r\n  border-bottom-left-radius: 0.5em;\r\n  border-bottom-right-radius: 0.5em;\r\n  background: #fefcfc;\r\n}\r\n.ql-snow.ql-toolbar {\r\n  display: block;\r\n  background: #eaecec;\r\n  border-top-left-radius: 0.5em;\r\n  border-top-right-radius: 0.5em;\r\n}\r\n\r\n .ql-bubble .ql-editor {\r\n  border: 1px solid #ccc;\r\n  border-radius: 0.5em;\r\n}\r\n .ql-editor {\r\n  min-height: 18em;\r\n}\r\n\r\n.themeSwitcher {\r\n  margin-top: 0.5em;\r\n  font-size: small;\r\n}\r\n`;\r\n\r\n\r\nconst TitleInput = styled.input`\r\n    font-size:3rem;\r\n    outline:none;\r\n    padding-bottom:0.5rem;\r\n    border:none;\r\n    border-bottom:1px solid ${palette.gray[4]};\r\n    margin-bottom:2rem;\r\n    width:100%;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin:1rem;\r\n    margin-left:0;\r\n    display:flex;\r\n    justify-content:space-between;\r\n`;\r\n\r\nconst quillOption = {\r\n    theme: 'snow',\r\n    placeholder: 'write here...',\r\n    modules: {\r\n        toolbar: [\r\n            [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n            [{ size: [] }],\r\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n            { 'indent': '-1' }, { 'indent': '+1' }],\r\n            //['link', 'image', 'video'],\r\n            ['clean']\r\n        ],\r\n        clipboard: {\r\n            // toggle to add extra line breaks when pasting HTML:\r\n            matchVisual: false,\r\n        }\r\n    },\r\n    formats: [\r\n        'header', 'font', 'size',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n        'list', 'bullet', 'indent',\r\n        'link', 'image', 'video'\r\n    ]\r\n}\r\n\r\nconst WriteTemplate = () => {\r\n    const dispatch = useDispatch();\r\n    const [moveToPostList, setMoveToPostList] = useState(false);\r\n\r\n    const write = useSelector(({ write }: RootStateType) => write);\r\n    const loading = useSelector(({ loading }: RootStateType) => loading);\r\n\r\n    const { title, contents, tags, _id } = write;\r\n\r\n    const [editorState, setEditorState] = useState({ title: '', contents: '', theme: 'snow' });\r\n\r\n    const onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        dispatch(changeWritingField({ ...write, title: value }));\r\n    }\r\n\r\n    const onChangeContents = (text: string) => {\r\n        dispatch(changeWritingField({ ...write, contents: text }));\r\n    }\r\n\r\n    const onChangeSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        e.preventDefault();\r\n        setEditorState({ ...editorState, theme: e.target.value })\r\n    }\r\n\r\n    const onGoingBack = () => {\r\n        if (!_id) { dispatch(writePostAsync({ title, contents, tags })) }\r\n        else {\r\n            dispatch(updatePostAsync({ _id, title, contents }))\r\n        }\r\n        setMoveToPostList(true);\r\n    }\r\n    const onDelete = () => {\r\n        dispatch(deletePostAsync({ _id }));\r\n        setMoveToPostList(true);\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        if (moveToPostList && !loading['write/WRITE_POST'] && !loading['write/UPDATE_POST'] && !loading['write/DELETE_POST']) {\r\n            history.push('/postListPage');\r\n        }\r\n    }, [loading['write/WRITE_POST'], loading['write/UPDATE_POST'], loading['write/DELETE_POST'], moveToPostList])\r\n\r\n    return (\r\n        <WriteTemplateBlock>\r\n            <ButtonWrapper>\r\n                <Button cyan={true} fullWidth={false} onClickFunction={onGoingBack}>Back to lists</Button>\r\n                <Button cyan={false} fullWidth={false} onClickFunction={onDelete}>Delete</Button>\r\n            </ButtonWrapper>\r\n            <TitleInput onChange={e => onChangeTitle(e)} name='title'\r\n                placeholder=\"Write a title here\" value={write.title} />\r\n            <ReactQuill\r\n                onChange={e => onChangeContents(e)}\r\n                theme={editorState.theme}\r\n                modules={quillOption.modules}\r\n                formats={quillOption.formats}\r\n                placeholder={quillOption.placeholder}\r\n                value={write.contents}\r\n            />\r\n            <div className=\"themeSwitcher\">\r\n                <label>Theme </label>\r\n                <select onChange={(e) =>\r\n                    onChangeSelect(e)}>\r\n                    <option value=\"snow\">Snow</option>\r\n                    <option value=\"bubble\">Bubble</option>\r\n                </select>\r\n            </div>\r\n        </WriteTemplateBlock>\r\n    )\r\n}\r\n\r\nexport default WriteTemplate;","import React from 'react'\r\nimport WriteTemplate from '../components/write/WriteTemplate';\r\n\r\n\r\nconst WritePage = () => {\r\n    return (\r\n        <div>\r\n            <WriteTemplate/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WritePage","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport PostListPage from './pages/PostListPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport WritePage from './pages/WritePage';\n\nfunction App() {\n  return (\n    <div>\n      <Route path={[\"/\",\"/login\"]} component={LoginPage} exact/>\n      <Route path=\"/register\" component={RegisterPage} exact/>\n      <Route path='/postListPage' component={PostListPage} exact />\n      <Route path=\"/write\" component={WritePage} exact/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nimport auth from './auth';\r\nimport loading from './loading';\r\nimport write from './write';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whiteList: ['auth', 'loading', 'write']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    auth, loading, write\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport  history  from './history';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport rootReducer from './store';\nimport { tempSetUser, checkAsync, TEMP_SET_USER } from './store/auth';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconsole.log(navigator.language);\n\nconst persister = persistStore(store);\n\nasync function loadUser() {\n  try {\n    const username = localStorage.getItem('username');\n    if (!username) return;\n\n    store.dispatch({ type: TEMP_SET_USER, payload: username });\n    await checkAsync(() => { });\n\n    if (store.getState().auth.checkError) {\n      localStorage.removeItem('username');\n    }\n  } catch (e) { console.log(e) }\n}\n\nloadUser();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persister}>\n        <Router history={history} >\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}